% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyze_median.R
\name{analyze_median}
\alias{analyze_median}
\title{Enhanced Median Analysis with Automatic Disaggregation}
\usage{
analyze_median(
  df,
  ques,
  disag = NULL,
  level = NULL,
  show_view = FALSE,
  wide_format = FALSE,
  dt_table = FALSE,
  create_plot = FALSE,
  max_categories = 10,
  max_label_length = 12,
  font_sizes = list(plot_title = 12, legend_title = 10, legend_text = 10, geom_text = 3,
    axis_title = 10)
)
}
\arguments{
\item{df}{A data frame containing the survey data}

\item{ques}{Character string specifying the column name of the question to analyze}

\item{disag}{Character string specifying the disaggregation variable name (optional)}

\item{level}{Character string specifying the disaggregation level name (optional)}

\item{show_view}{Logical, whether to display results in Viewer pane}

\item{wide_format}{Logical, whether to reshape results to wide format}

\item{dt_table}{Logical, whether to use DT table for display}

\item{create_plot}{Logical, whether to create visualization}

\item{max_categories}{Integer, maximum number of categories to display}

\item{max_label_length}{Integer, maximum length for labels}

\item{font_sizes}{List of font sizes for plot elements}
}
\value{
A data frame with median value and metadata, or a list containing table, dt_table, and plot objects if requested
}
\description{
Enhanced statistical analysis function for calculating medians with automatic disaggregation handling.
Automatically loops through disaggregation levels if provided.
If no disaggregation variable is provided, performs overall analysis.
}
\examples{
# Create sample data
survey_data <- data.frame(
  age = c(25, 30, 35, 40, 28, 32, 45, 38),
  region = c("North", "South", "North", "South", "East", "North", "South", "East")
)

# Calculate median age by region
median_age_by_region <- analyze_median(df = survey_data, 
                                      ques = "age", 
                                      disag = "region")
print(median_age_by_region)
}
